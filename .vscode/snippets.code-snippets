{
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Interface": {
		"prefix": "interface",
		"description": "Interface",
		"body": [
			"interface",
			"\t\t$1",
			"end interface"
		]
	},
	"Simple function": {
		"prefix": "fun1",
		"description": "Simple function",
		"body": [
			"double precision function $1(x) result(retval)",
			"\timplicit none",
			"\t\tdouble precision, intent(in) :: x",
			"\t\tretval = $2",
			"end function $1"
		]
	},
	"Double function": {
		"prefix": "fun2",
		"description": "Double function",
		"body": [
			"double precision function $1(x, y) result(retval)",
			"\timplicit none",
			"\t\tdouble precision, intent(in) :: x, y",
			"\t\tretval = $2",
			"end function $1"
		]
	},
	"Interface simple function": {
		"prefix": "ifunc",
		"description": "Interface simple function",
		"body": [
			"double precision function $1(x) ",
			"\timplicit none",
			"\tdouble precision, intent(in) :: x",
			"end function $1"
		]
	},
	"Interface double function": {
		"prefix": "ifunc2",
		"description": "Interface double function",
		"body": [
			"double precision function $1(x, y) ",
			"\timplicit none",
			"\tdouble precision, intent(in) :: x, y",
			"end function $1"
		]
	}

}